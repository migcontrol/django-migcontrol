# Generated by Django 3.2.18 on 2023-06-28 20:08
import json
from django.core.serializers.json import DjangoJSONEncoder
from django.db import migrations
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks


def convert_to_streamfield(apps, schema_editor):
    WikiPage = apps.get_model("wiki", "WikiPage")
    for page in WikiPage.objects.all():
        page.description = json.dumps(
            [{"type": "rich_text", "value": page.description}],
            cls=DjangoJSONEncoder
        )
        page.save()


def convert_to_richtext(apps, schema_editor):
    WikiPage = apps.get_model("wiki", "WikiPage")
    for page in WikiPage.objects.all():
        if page.description:
            stream = json.loads(page.description)
            page.description = "".join([
                child["value"] for child in stream
                if child["type"] == "rich_text"
            ])
            page.save()

class Migration(migrations.Migration):

    dependencies = [
        ('wiki', '0004_wikicategorysnippet_wikipagewikicategory'),
    ]

    operations = [
        migrations.RunPython(
            convert_to_streamfield,
            convert_to_richtext,
        ),
        migrations.AlterField(
            model_name='wikipage',
            name='description',
            field=wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='title')), ('paragraph', wagtail.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'bold', 'italic', 'ol', 'ul', 'hr', 'link', 'document-link', 'image', 'embed', 'footnotes', 'code', 'superscript', 'subscript', 'strikethrough', 'blockquote'])), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())], use_json_field=True),
        ),
    ]
